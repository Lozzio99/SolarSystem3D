<?xml version="1.0" encoding="UTF-8"?>
<project name="solarsystem3d" default="all">
  
  
  <property file="build.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="ignored.files">
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/*.rbc/**"/>
    <exclude name="**/*.yarb/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/CVS/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/vssver.scc/**"/>
    <exclude name="**/vssver2.scc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.egg"/>
    <include name="*.zip"/>
    <include name="*.war"/>
    <include name="*.swc"/>
    <include name="*.ear"/>
    <include name="*.jar"/>
    <include name="*.ane"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
    <exclude name="**/?*.aj"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.openjdk-16" value="${jdk.home.openjdk-16}/bin"/>
  <path id="jdk.classpath.openjdk-16">
    <fileset dir="${jdk.home.openjdk-16}">
      <include name="../openjdk-16.0.1!/java.base"/>
      <include name="../openjdk-16.0.1!/java.compiler"/>
      <include name="../openjdk-16.0.1!/java.datatransfer"/>
      <include name="../openjdk-16.0.1!/java.desktop"/>
      <include name="../openjdk-16.0.1!/java.instrument"/>
      <include name="../openjdk-16.0.1!/java.logging"/>
      <include name="../openjdk-16.0.1!/java.management"/>
      <include name="../openjdk-16.0.1!/java.management.rmi"/>
      <include name="../openjdk-16.0.1!/java.naming"/>
      <include name="../openjdk-16.0.1!/java.net.http"/>
      <include name="../openjdk-16.0.1!/java.prefs"/>
      <include name="../openjdk-16.0.1!/java.rmi"/>
      <include name="../openjdk-16.0.1!/java.scripting"/>
      <include name="../openjdk-16.0.1!/java.se"/>
      <include name="../openjdk-16.0.1!/java.security.jgss"/>
      <include name="../openjdk-16.0.1!/java.security.sasl"/>
      <include name="../openjdk-16.0.1!/java.smartcardio"/>
      <include name="../openjdk-16.0.1!/java.sql"/>
      <include name="../openjdk-16.0.1!/java.sql.rowset"/>
      <include name="../openjdk-16.0.1!/java.transaction.xa"/>
      <include name="../openjdk-16.0.1!/java.xml"/>
      <include name="../openjdk-16.0.1!/java.xml.crypto"/>
      <include name="../openjdk-16.0.1!/jdk.accessibility"/>
      <include name="../openjdk-16.0.1!/jdk.attach"/>
      <include name="../openjdk-16.0.1!/jdk.charsets"/>
      <include name="../openjdk-16.0.1!/jdk.compiler"/>
      <include name="../openjdk-16.0.1!/jdk.crypto.cryptoki"/>
      <include name="../openjdk-16.0.1!/jdk.crypto.ec"/>
      <include name="../openjdk-16.0.1!/jdk.crypto.mscapi"/>
      <include name="../openjdk-16.0.1!/jdk.dynalink"/>
      <include name="../openjdk-16.0.1!/jdk.editpad"/>
      <include name="../openjdk-16.0.1!/jdk.hotspot.agent"/>
      <include name="../openjdk-16.0.1!/jdk.httpserver"/>
      <include name="../openjdk-16.0.1!/jdk.incubator.foreign"/>
      <include name="../openjdk-16.0.1!/jdk.incubator.vector"/>
      <include name="../openjdk-16.0.1!/jdk.internal.ed"/>
      <include name="../openjdk-16.0.1!/jdk.internal.jvmstat"/>
      <include name="../openjdk-16.0.1!/jdk.internal.le"/>
      <include name="../openjdk-16.0.1!/jdk.internal.opt"/>
      <include name="../openjdk-16.0.1!/jdk.internal.vm.ci"/>
      <include name="../openjdk-16.0.1!/jdk.jartool"/>
      <include name="../openjdk-16.0.1!/jdk.javadoc"/>
      <include name="../openjdk-16.0.1!/jdk.jcmd"/>
      <include name="../openjdk-16.0.1!/jdk.jconsole"/>
      <include name="../openjdk-16.0.1!/jdk.jdeps"/>
      <include name="../openjdk-16.0.1!/jdk.jdi"/>
      <include name="../openjdk-16.0.1!/jdk.jdwp.agent"/>
      <include name="../openjdk-16.0.1!/jdk.jfr"/>
      <include name="../openjdk-16.0.1!/jdk.jlink"/>
      <include name="../openjdk-16.0.1!/jdk.jpackage"/>
      <include name="../openjdk-16.0.1!/jdk.jshell"/>
      <include name="../openjdk-16.0.1!/jdk.jsobject"/>
      <include name="../openjdk-16.0.1!/jdk.jstatd"/>
      <include name="../openjdk-16.0.1!/jdk.localedata"/>
      <include name="../openjdk-16.0.1!/jdk.management"/>
      <include name="../openjdk-16.0.1!/jdk.management.agent"/>
      <include name="../openjdk-16.0.1!/jdk.management.jfr"/>
      <include name="../openjdk-16.0.1!/jdk.naming.dns"/>
      <include name="../openjdk-16.0.1!/jdk.naming.rmi"/>
      <include name="../openjdk-16.0.1!/jdk.net"/>
      <include name="../openjdk-16.0.1!/jdk.nio.mapmode"/>
      <include name="../openjdk-16.0.1!/jdk.sctp"/>
      <include name="../openjdk-16.0.1!/jdk.security.auth"/>
      <include name="../openjdk-16.0.1!/jdk.security.jgss"/>
      <include name="../openjdk-16.0.1!/jdk.unsupported"/>
      <include name="../openjdk-16.0.1!/jdk.unsupported.desktop"/>
      <include name="../openjdk-16.0.1!/jdk.xml.dom"/>
      <include name="../openjdk-16.0.1!/jdk.zipfs"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.openjdk-16}"/>
  <property name="project.jdk.bin" value="${jdk.bin.openjdk-16}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.openjdk-16"/>
  
  
  <!-- Project Libraries -->
  
  <path id="library.gradle:_org.apiguardian:apiguardian-api:1.1.0.classpath">
    <pathelement location="${basedir}/../../Users/Lorenzo/.gradle/caches/modules-2/files-2.1/org.apiguardian/apiguardian-api/1.1.0/fc9dff4bb36d627bdc553de77e1f17efd790876c/apiguardian-api-1.1.0.jar"/>
  </path>
  
  <path id="library.gradle:_org.jetbrains:annotations:20.1.0.classpath">
    <pathelement location="${basedir}/../../Users/Lorenzo/.gradle/caches/modules-2/files-2.1/org.jetbrains/annotations/20.1.0/2fcd1f3225bca0c4a7bc931142076f8c1e80993f/annotations-20.1.0.jar"/>
  </path>
  
  <path id="library.gradle:_org.junit.jupiter:junit-jupiter-api:5.7.0.classpath">
    <pathelement location="${basedir}/../../Users/Lorenzo/.gradle/caches/modules-2/files-2.1/org.junit.jupiter/junit-jupiter-api/5.7.0/b25f3815c4c1860a73041e733a14a0379d00c4d5/junit-jupiter-api-5.7.0.jar"/>
  </path>
  
  <path id="library.gradle:_org.junit.jupiter:junit-jupiter-engine:5.7.0.classpath">
    <pathelement location="${basedir}/../../Users/Lorenzo/.gradle/caches/modules-2/files-2.1/org.junit.jupiter/junit-jupiter-engine/5.7.0/d9044d6b45e2232ddd53fa56c15333e43d1749fd/junit-jupiter-engine-5.7.0.jar"/>
  </path>
  
  <path id="library.gradle:_org.junit.jupiter:junit-jupiter-params:5.7.0.classpath">
    <pathelement location="${basedir}/../../Users/Lorenzo/.gradle/caches/modules-2/files-2.1/org.junit.jupiter/junit-jupiter-params/5.7.0/521dbecace93d5d7ef13a74aab231befd7954424/junit-jupiter-params-5.7.0.jar"/>
  </path>
  
  <path id="library.gradle:_org.junit.jupiter:junit-jupiter:5.7.0.classpath">
    <pathelement location="${basedir}/../../Users/Lorenzo/.gradle/caches/modules-2/files-2.1/org.junit.jupiter/junit-jupiter/5.7.0/3152d152da916ccbb0715f89f7f873f45362ad7f/junit-jupiter-5.7.0.jar"/>
  </path>
  
  <path id="library.gradle:_org.junit.platform:junit-platform-commons:1.7.0.classpath">
    <pathelement location="${basedir}/../../Users/Lorenzo/.gradle/caches/modules-2/files-2.1/org.junit.platform/junit-platform-commons/1.7.0/84e309fbf21d857aac079a3c1fffd84284e1114d/junit-platform-commons-1.7.0.jar"/>
  </path>
  
  <path id="library.gradle:_org.junit.platform:junit-platform-engine:1.7.0.classpath">
    <pathelement location="${basedir}/../../Users/Lorenzo/.gradle/caches/modules-2/files-2.1/org.junit.platform/junit-platform-engine/1.7.0/eadb73c5074a4ac71061defd00fc176152a4d12c/junit-platform-engine-1.7.0.jar"/>
  </path>
  
  <path id="library.gradle:_org.opentest4j:opentest4j:1.2.0.classpath">
    <pathelement location="${basedir}/../../Users/Lorenzo/.gradle/caches/modules-2/files-2.1/org.opentest4j/opentest4j/1.2.0/28c11eb91f9b6d8e200631d46e20a7f407f2a046/opentest4j-1.2.0.jar"/>
  </path>
  
  
  <!-- Global Libraries -->
  <!-- Register Custom Compiler Taskdefs -->
  <property name="javac2.home" value="${idea.home}/lib"/>
  <path id="javac2.classpath">
    <fileset dir="${javac2.home}">
      <include name="jdom.jar"/>
      <include name="asm-all*.jar"/>
      <include name="forms-*.jar"/>
      <include name="forms_rt.jar"/>
    </fileset>
    <fileset dir="${idea.home}/plugins/java/lib">
      <include name="javac2.jar"/>
    </fileset>
  </path>
  <target name="register.custom.compilers">
    <taskdef name="javac2" classname="com.intellij.ant.Javac2" classpathref="javac2.classpath"/>
    <taskdef name="instrumentIdeaExtensions" classname="com.intellij.ant.InstrumentIdeaExtensions" classpathref="javac2.classpath"/>
  </target>
  
  <!-- Modules -->
  
  
  <!-- Module SolarSystem3D -->
  
  <dirname property="module.solarsystem3d.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.solarsystem3d" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.solarsystem3d" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.solarsystem3d" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.solarsystem3d" value="-encoding UTF-8 -source 16 -target 16 ${compiler.args}"/>
  
  <property name="solarsystem3d.output.dir" value="${module.solarsystem3d.basedir}/out/production/SolarSystem3D"/>
  <property name="solarsystem3d.testoutput.dir" value="${module.solarsystem3d.basedir}/out/test/SolarSystem3D"/>
  
  <path id="solarsystem3d.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="solarsystem3d.module.production.classpath">
    <path refid="${module.jdk.classpath.solarsystem3d}"/>
  </path>
  
  <path id="solarsystem3d.runtime.production.module.classpath">
    <pathelement location="${solarsystem3d.output.dir}"/>
  </path>
  
  <path id="solarsystem3d.module.classpath">
    <path refid="${module.jdk.classpath.solarsystem3d}"/>
    <pathelement location="${solarsystem3d.output.dir}"/>
  </path>
  
  <path id="solarsystem3d.runtime.module.classpath">
    <pathelement location="${solarsystem3d.testoutput.dir}"/>
    <pathelement location="${solarsystem3d.output.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.solarsystem3d">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.solarsystem3d">
    <patternset refid="excluded.from.module.solarsystem3d"/>
  </patternset>
  
  
  <target name="compile.module.solarsystem3d" depends="compile.module.solarsystem3d.production,compile.module.solarsystem3d.tests" description="Compile module SolarSystem3D"/>
  
  <target name="compile.module.solarsystem3d.production" depends="register.custom.compilers" description="Compile module SolarSystem3D; production classes"/>
  
  <target name="compile.module.solarsystem3d.tests" depends="register.custom.compilers,compile.module.solarsystem3d.production" description="compile module SolarSystem3D; test classes" unless="skip.tests"/>
  
  <target name="clean.module.solarsystem3d" description="cleanup module">
    <delete dir="${solarsystem3d.output.dir}"/>
    <delete dir="${solarsystem3d.testoutput.dir}"/>
  </target>
  
  
  <!-- Module SolarSystem3D.main -->
  
  <dirname property="module.solarsystem3d.main.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.solarsystem3d.main" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.solarsystem3d.main" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.solarsystem3d.main" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.solarsystem3d.main" value="-encoding UTF-8 -source 16 -target 16 ${compiler.args}"/>
  
  <property name="solarsystem3d.main.output.dir" value="${module.solarsystem3d.main.basedir}/build/classes/java/main"/>
  <property name="solarsystem3d.main.testoutput.dir" value="${module.solarsystem3d.main.basedir}/build/classes/java/main"/>
  
  <path id="solarsystem3d.main.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="solarsystem3d.main.module.production.classpath">
    <path refid="${module.jdk.classpath.solarsystem3d.main}"/>
    <path refid="library.gradle:_org.jetbrains:annotations:20.1.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-params:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-api:5.7.0.classpath"/>
    <path refid="library.gradle:_org.apiguardian:apiguardian-api:1.1.0.classpath"/>
    <path refid="library.gradle:_org.junit.platform:junit-platform-commons:1.7.0.classpath"/>
    <path refid="library.gradle:_org.opentest4j:opentest4j:1.2.0.classpath"/>
  </path>
  
  <path id="solarsystem3d.main.runtime.production.module.classpath">
    <pathelement location="${solarsystem3d.main.output.dir}"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-params:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-api:5.7.0.classpath"/>
    <path refid="library.gradle:_org.apiguardian:apiguardian-api:1.1.0.classpath"/>
    <path refid="library.gradle:_org.junit.platform:junit-platform-commons:1.7.0.classpath"/>
    <path refid="library.gradle:_org.opentest4j:opentest4j:1.2.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-engine:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.platform:junit-platform-engine:1.7.0.classpath"/>
  </path>
  
  <path id="solarsystem3d.main.module.classpath">
    <path refid="${module.jdk.classpath.solarsystem3d.main}"/>
    <pathelement location="${solarsystem3d.main.output.dir}"/>
    <path refid="library.gradle:_org.jetbrains:annotations:20.1.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-params:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-api:5.7.0.classpath"/>
    <path refid="library.gradle:_org.apiguardian:apiguardian-api:1.1.0.classpath"/>
    <path refid="library.gradle:_org.junit.platform:junit-platform-commons:1.7.0.classpath"/>
    <path refid="library.gradle:_org.opentest4j:opentest4j:1.2.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-engine:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.platform:junit-platform-engine:1.7.0.classpath"/>
  </path>
  
  <path id="solarsystem3d.main.runtime.module.classpath">
    <pathelement location="${solarsystem3d.main.output.dir}"/>
    <path refid="library.gradle:_org.jetbrains:annotations:20.1.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-params:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-api:5.7.0.classpath"/>
    <path refid="library.gradle:_org.apiguardian:apiguardian-api:1.1.0.classpath"/>
    <path refid="library.gradle:_org.junit.platform:junit-platform-commons:1.7.0.classpath"/>
    <path refid="library.gradle:_org.opentest4j:opentest4j:1.2.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-engine:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.platform:junit-platform-engine:1.7.0.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.solarsystem3d.main">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.solarsystem3d.main">
    <patternset refid="excluded.from.module.solarsystem3d.main"/>
  </patternset>
  
  <path id="solarsystem3d.main.module.sourcepath">
    <dirset dir="${module.solarsystem3d.main.basedir}/src/main">
      <include name="java"/>
      <include name="resources"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.solarsystem3d.main" depends="compile.module.solarsystem3d.main.production,compile.module.solarsystem3d.main.tests" description="Compile module SolarSystem3D.main"/>
  
  <target name="compile.module.solarsystem3d.main.production" depends="register.custom.compilers" description="Compile module SolarSystem3D.main; production classes">
    <mkdir dir="${solarsystem3d.main.output.dir}"/>
    <javac2 destdir="${solarsystem3d.main.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.solarsystem3d.main}/javac">
      <compilerarg line="${compiler.args.solarsystem3d.main}"/>
      <bootclasspath refid="solarsystem3d.main.module.bootclasspath"/>
      <classpath refid="solarsystem3d.main.module.production.classpath"/>
      <src refid="solarsystem3d.main.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.solarsystem3d.main"/>
    </javac2>
    
    <copy todir="${solarsystem3d.main.output.dir}">
      <fileset dir="${module.solarsystem3d.main.basedir}/src/main/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.solarsystem3d.main.basedir}/src/main/resources">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.solarsystem3d.main.tests" depends="register.custom.compilers,compile.module.solarsystem3d.main.production" description="compile module SolarSystem3D.main; test classes" unless="skip.tests"/>
  
  <target name="clean.module.solarsystem3d.main" description="cleanup module">
    <delete dir="${solarsystem3d.main.output.dir}"/>
    <delete dir="${solarsystem3d.main.testoutput.dir}"/>
  </target>
  
  
  <!-- Module SolarSystem3D.test -->
  
  <dirname property="module.solarsystem3d.test.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.solarsystem3d.test" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.solarsystem3d.test" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.solarsystem3d.test" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.solarsystem3d.test" value="-encoding UTF-8 -source 16 -target 16 ${compiler.args}"/>
  
  <property name="solarsystem3d.test.output.dir" value="undefined"/>
  <property name="solarsystem3d.test.testoutput.dir" value="${module.solarsystem3d.test.basedir}/build/classes/java/test"/>
  
  <path id="solarsystem3d.test.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="solarsystem3d.test.module.production.classpath">
    <path refid="${module.jdk.classpath.solarsystem3d.test}"/>
    <pathelement location="${solarsystem3d.main.output.dir}"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-api:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.platform:junit-platform-commons:1.7.0.classpath"/>
    <path refid="library.gradle:_org.apiguardian:apiguardian-api:1.1.0.classpath"/>
    <path refid="library.gradle:_org.opentest4j:opentest4j:1.2.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-params:5.7.0.classpath"/>
  </path>
  
  <path id="solarsystem3d.test.runtime.production.module.classpath">
    <pathelement location="${solarsystem3d.main.output.dir}"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-params:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-api:5.7.0.classpath"/>
    <path refid="library.gradle:_org.apiguardian:apiguardian-api:1.1.0.classpath"/>
    <path refid="library.gradle:_org.junit.platform:junit-platform-commons:1.7.0.classpath"/>
    <path refid="library.gradle:_org.opentest4j:opentest4j:1.2.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-engine:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.platform:junit-platform-engine:1.7.0.classpath"/>
  </path>
  
  <path id="solarsystem3d.test.module.classpath">
    <path refid="${module.jdk.classpath.solarsystem3d.test}"/>
    <pathelement location="${solarsystem3d.main.output.dir}"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-api:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.platform:junit-platform-commons:1.7.0.classpath"/>
    <path refid="library.gradle:_org.apiguardian:apiguardian-api:1.1.0.classpath"/>
    <path refid="library.gradle:_org.opentest4j:opentest4j:1.2.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-params:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-engine:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.platform:junit-platform-engine:1.7.0.classpath"/>
  </path>
  
  <path id="solarsystem3d.test.runtime.module.classpath">
    <pathelement location="${solarsystem3d.test.testoutput.dir}"/>
    <pathelement location="${solarsystem3d.main.output.dir}"/>
    <path refid="library.gradle:_org.jetbrains:annotations:20.1.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-params:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-api:5.7.0.classpath"/>
    <path refid="library.gradle:_org.apiguardian:apiguardian-api:1.1.0.classpath"/>
    <path refid="library.gradle:_org.junit.platform:junit-platform-commons:1.7.0.classpath"/>
    <path refid="library.gradle:_org.opentest4j:opentest4j:1.2.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-engine:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.platform:junit-platform-engine:1.7.0.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.solarsystem3d.test">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.solarsystem3d.test">
    <patternset refid="excluded.from.module.solarsystem3d.test"/>
  </patternset>
  
  <path id="solarsystem3d.test.module.test.sourcepath">
    <dirset dir="${module.solarsystem3d.test.basedir}/src/test">
      <include name="java"/>
      <include name="resources"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.solarsystem3d.test" depends="compile.module.solarsystem3d.test.production,compile.module.solarsystem3d.test.tests" description="Compile module SolarSystem3D.test"/>
  
  <target name="compile.module.solarsystem3d.test.production" depends="register.custom.compilers,compile.module.solarsystem3d.main" description="Compile module SolarSystem3D.test; production classes"/>
  
  <target name="compile.module.solarsystem3d.test.tests" depends="register.custom.compilers,compile.module.solarsystem3d.test.production" description="compile module SolarSystem3D.test; test classes" unless="skip.tests">
    <mkdir dir="${solarsystem3d.test.testoutput.dir}"/>
    <javac2 destdir="${solarsystem3d.test.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.solarsystem3d.test}/javac">
      <compilerarg line="${compiler.args.solarsystem3d.test}"/>
      <bootclasspath refid="solarsystem3d.test.module.bootclasspath"/>
      <classpath refid="solarsystem3d.test.module.classpath"/>
      <src refid="solarsystem3d.test.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.solarsystem3d.test"/>
    </javac2>
    
    <copy todir="${solarsystem3d.test.testoutput.dir}">
      <fileset dir="${module.solarsystem3d.test.basedir}/src/test/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.solarsystem3d.test.basedir}/src/test/resources">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.solarsystem3d.test" description="cleanup module">
    <delete dir="${solarsystem3d.test.output.dir}"/>
    <delete dir="${solarsystem3d.test.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.solarsystem3d, clean.module.solarsystem3d.main, clean.module.solarsystem3d.test" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.solarsystem3d, compile.module.solarsystem3d.main, compile.module.solarsystem3d.test" description="build all modules"/>
  
  <target name="all" depends="build.modules" description="build all"/>
</project>