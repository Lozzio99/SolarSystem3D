plugins {
    id 'java'
    id 'application'
    id 'jacoco'
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(16))
    }
}


apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'jacoco'

group 'org.Lozzio'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}



dependencies {
    compileOnly 'org.jetbrains:annotations:20.1.0'
    implementation 'org.junit.jupiter:junit-jupiter:5.7.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}


tasks.withType(JavaCompile).configureEach {
    it.options.compilerArgs.add('--enable-preview')
    //it.options.compilerArgs.addAll(['--source','16'])
}


test {
    useJUnitPlatform()
    jvmArgs(['--enable-preview'])
    onOutput { descriptor, event ->
        if (event.destination == TestOutputEvent.Destination.StdErr) {

            if (event.message instanceof String)
                logger.error "Test: " + descriptor + ", error: " + event.message as String
            else
                logger.error "Test: " + descriptor + ", error: " + event.message as Error

        } else {
            logger.lifecycle  "Test: " + descriptor + ", output: " + event.message as String
        }
    }
    finalizedBy jacocoTestReport
}

ext {
    javaMainClass = "src/main/java/phase3/Main.java"
}


application {
    getMainClass().set javaMainClass
    applicationDefaultJvmArgs = ['--enable-preview','--source','16']
}